From dce29b7d6a3d003a97bafd37a2f3b51b7bb7991a Mon Sep 17 00:00:00 2001
From: Anup Patel <apatel@ventanamicro.com>
Date: Mon, 21 Aug 2023 15:59:57 +0530
Subject: [PATCH 53/63] lib: utils: Add simple FDT based RPXY driver framework

The generic platform can have multiple RPXY drivers so let us
add a simple FDT based RPXY driver framework.

Signed-off-by: Anup Patel <apatel@ventanamicro.com>
---
 include/sbi_utils/rpxy/fdt_rpxy.h      | 31 ++++++++++++++++
 lib/utils/Kconfig                      |  2 ++
 lib/utils/rpxy/Kconfig                 | 10 ++++++
 lib/utils/rpxy/fdt_rpxy.c              | 50 ++++++++++++++++++++++++++
 lib/utils/rpxy/fdt_rpxy_drivers.carray |  3 ++
 lib/utils/rpxy/objects.mk              | 11 ++++++
 platform/generic/configs/defconfig     |  1 +
 platform/generic/platform.c            |  2 ++
 8 files changed, 110 insertions(+)
 create mode 100644 include/sbi_utils/rpxy/fdt_rpxy.h
 create mode 100644 lib/utils/rpxy/Kconfig
 create mode 100644 lib/utils/rpxy/fdt_rpxy.c
 create mode 100644 lib/utils/rpxy/fdt_rpxy_drivers.carray
 create mode 100644 lib/utils/rpxy/objects.mk

diff --git a/include/sbi_utils/rpxy/fdt_rpxy.h b/include/sbi_utils/rpxy/fdt_rpxy.h
new file mode 100644
index 0000000..4a550dc
--- /dev/null
+++ b/include/sbi_utils/rpxy/fdt_rpxy.h
@@ -0,0 +1,31 @@
+/*
+ * SPDX-License-Identifier: BSD-2-Clause
+ *
+ * Copyright (c) 2020 Western Digital Corporation or its affiliates.
+ *
+ * Authors:
+ *   Anup Patel <anup.patel@wdc.com>
+ */
+
+#ifndef __FDT_RPXY_H__
+#define __FDT_RPXY_H__
+
+#include <sbi/sbi_types.h>
+
+#ifdef CONFIG_FDT_RPXY
+
+struct fdt_rpxy {
+	const struct fdt_match *match_table;
+	int (*init)(void *fdt, int nodeoff, const struct fdt_match *match);
+	void (*exit)(void);
+};
+
+int fdt_rpxy_init(void);
+
+#else
+
+static inline int fdt_rpxy_init(void) { return 0; }
+
+#endif
+
+#endif
diff --git a/lib/utils/Kconfig b/lib/utils/Kconfig
index de8b4eb..c89c7b2 100644
--- a/lib/utils/Kconfig
+++ b/lib/utils/Kconfig
@@ -18,6 +18,8 @@ source "$(OPENSBI_SRC_DIR)/lib/utils/regmap/Kconfig"
 
 source "$(OPENSBI_SRC_DIR)/lib/utils/reset/Kconfig"
 
+source "$(OPENSBI_SRC_DIR)/lib/utils/rpxy/Kconfig"
+
 source "$(OPENSBI_SRC_DIR)/lib/utils/serial/Kconfig"
 
 source "$(OPENSBI_SRC_DIR)/lib/utils/sys/Kconfig"
diff --git a/lib/utils/rpxy/Kconfig b/lib/utils/rpxy/Kconfig
new file mode 100644
index 0000000..6800112
--- /dev/null
+++ b/lib/utils/rpxy/Kconfig
@@ -0,0 +1,10 @@
+# SPDX-License-Identifier: BSD-2-Clause
+
+menu "RPXY Device Support"
+
+config FDT_RPXY
+	bool "FDT based RPXY drivers"
+	depends on FDT
+	default n
+
+endmenu
diff --git a/lib/utils/rpxy/fdt_rpxy.c b/lib/utils/rpxy/fdt_rpxy.c
new file mode 100644
index 0000000..05e4f15
--- /dev/null
+++ b/lib/utils/rpxy/fdt_rpxy.c
@@ -0,0 +1,50 @@
+/*
+ * SPDX-License-Identifier: BSD-2-Clause
+ *
+ * Copyright (c) 2023 Ventana Micro Systems Inc.
+ *
+ * Authors:
+ *   Anup Patel <apatel@ventanamicro.com>
+ */
+
+#include <sbi/sbi_error.h>
+#include <sbi_utils/fdt/fdt_helper.h>
+#include <sbi_utils/rpxy/fdt_rpxy.h>
+
+/* List of FDT RPXY drivers generated at compile time */
+extern struct fdt_rpxy *fdt_rpxy_drivers[];
+extern unsigned long fdt_rpxy_drivers_size;
+
+int fdt_rpxy_init(void)
+{
+	int pos, noff, rc;
+	struct fdt_rpxy *drv;
+	const struct fdt_match *match;
+	void *fdt = fdt_get_address();
+
+	for (pos = 0; pos < fdt_rpxy_drivers_size; pos++) {
+		drv = fdt_rpxy_drivers[pos];
+
+		noff = -1;
+		while ((noff = fdt_find_match(fdt, noff,
+					drv->match_table, &match)) >= 0) {
+			/* drv->init must not be NULL */
+			if (drv->init == NULL)
+				return SBI_EFAIL;
+
+			rc = drv->init(fdt, noff, match);
+			if (rc == SBI_ENODEV)
+				continue;
+			if (rc)
+				return rc;
+
+			/*
+			 * We will have multiple RPXY devices so we
+			 * cannot break here.
+			 */
+		}
+	}
+
+	/* Platforms might not have any RPXY devices so don't fail */
+	return 0;
+}
diff --git a/lib/utils/rpxy/fdt_rpxy_drivers.carray b/lib/utils/rpxy/fdt_rpxy_drivers.carray
new file mode 100644
index 0000000..a749cd6
--- /dev/null
+++ b/lib/utils/rpxy/fdt_rpxy_drivers.carray
@@ -0,0 +1,3 @@
+HEADER: sbi_utils/rpxy/fdt_rpxy.h
+TYPE: struct fdt_rpxy
+NAME: fdt_rpxy_drivers
diff --git a/lib/utils/rpxy/objects.mk b/lib/utils/rpxy/objects.mk
new file mode 100644
index 0000000..77deb16
--- /dev/null
+++ b/lib/utils/rpxy/objects.mk
@@ -0,0 +1,11 @@
+#
+# SPDX-License-Identifier: BSD-2-Clause
+#
+# Copyright (c) 2023 Ventana Micro Systems Inc.
+#
+# Authors:
+#   Anup Patel <apatel@ventanamicro.com>
+#
+
+libsbiutils-objs-$(CONFIG_FDT_RPXY) += rpxy/fdt_rpxy.o
+libsbiutils-objs-$(CONFIG_FDT_RPXY) += rpxy/fdt_rpxy_drivers.o
diff --git a/platform/generic/configs/defconfig b/platform/generic/configs/defconfig
index 1ce6a12..46bef7b 100644
--- a/platform/generic/configs/defconfig
+++ b/platform/generic/configs/defconfig
@@ -28,6 +28,7 @@ CONFIG_FDT_RESET_GPIO=y
 CONFIG_FDT_RESET_HTIF=y
 CONFIG_FDT_RESET_SUNXI_WDT=y
 CONFIG_FDT_RESET_SYSCON=y
+CONFIG_FDT_RPXY=y
 CONFIG_FDT_SERIAL=y
 CONFIG_FDT_SERIAL_CADENCE=y
 CONFIG_FDT_SERIAL_GAISLER=y
diff --git a/platform/generic/platform.c b/platform/generic/platform.c
index 1f46b76..b76c2a2 100644
--- a/platform/generic/platform.c
+++ b/platform/generic/platform.c
@@ -27,6 +27,7 @@
 #include <sbi_utils/timer/fdt_timer.h>
 #include <sbi_utils/ipi/fdt_ipi.h>
 #include <sbi_utils/reset/fdt_reset.h>
+#include <sbi_utils/rpxy/fdt_rpxy.h>
 #include <sbi_utils/serial/semihosting.h>
 
 /* List of platform override modules generated at compile time */
@@ -406,6 +407,7 @@ const struct sbi_platform_operations platform_ops = {
 	.get_tlb_num_entries	= generic_tlb_num_entries,
 	.timer_init		= fdt_timer_init,
 	.timer_exit		= fdt_timer_exit,
+	.rpxy_init 		= fdt_rpxy_init,
 	.vendor_ext_check	= generic_vendor_ext_check,
 	.vendor_ext_provider	= generic_vendor_ext_provider,
 };
-- 
2.34.1

