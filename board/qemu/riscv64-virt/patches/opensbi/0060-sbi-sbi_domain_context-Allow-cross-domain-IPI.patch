From b87a37d2f7afc47599c177e1598acfb57b31e131 Mon Sep 17 00:00:00 2001
From: Yu Chien Peter Lin <peterlin@andestech.com>
Date: Thu, 28 Mar 2024 10:38:28 +0800
Subject: [PATCH 60/63] sbi: sbi_domain_context: Allow cross domain IPI

Interrupts triggered during OP-TEE's execution are treated as
foreign interrupts and should be handled by Linux. Therefore,
do not save or restore them during domain context switching,
and allow IPIs to be received by all harts.

See: https://github.com/OP-TEE/optee_os/issues/6767

Signed-off-by: Yu Chien Peter Lin <peterlin@andestech.com>
Signed-off-by: Alvin Chang <alvinga@andestech.com>
---
 lib/sbi/sbi_domain_context.c | 1 -
 lib/sbi/sbi_hsm.c            | 5 ++++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/lib/sbi/sbi_domain_context.c b/lib/sbi/sbi_domain_context.c
index 9213c1a..d83a2ba 100755
--- a/lib/sbi/sbi_domain_context.c
+++ b/lib/sbi/sbi_domain_context.c
@@ -53,7 +53,6 @@ static void switch_to_next_domain_context(struct sbi_context *ctx,
 	ctx->sepc	= csr_swap(CSR_SEPC, dom_ctx->sepc);
 	ctx->scause	= csr_swap(CSR_SCAUSE, dom_ctx->scause);
 	ctx->stval	= csr_swap(CSR_STVAL, dom_ctx->stval);
-	ctx->sip	= csr_swap(CSR_SIP, dom_ctx->sip);
 	ctx->satp	= csr_swap(CSR_SATP, dom_ctx->satp);
 	ctx->scounteren = csr_swap(CSR_SCOUNTEREN, dom_ctx->scounteren);
 	ctx->senvcfg	= csr_swap(CSR_SENVCFG, dom_ctx->senvcfg);
diff --git a/lib/sbi/sbi_hsm.c b/lib/sbi/sbi_hsm.c
index be48d64..35c84de 100644
--- a/lib/sbi/sbi_hsm.c
+++ b/lib/sbi/sbi_hsm.c
@@ -21,6 +21,7 @@
 #include <sbi/sbi_hsm.h>
 #include <sbi/sbi_init.h>
 #include <sbi/sbi_ipi.h>
+#include <sbi/sbi_platform.h>
 #include <sbi/sbi_scratch.h>
 #include <sbi/sbi_system.h>
 #include <sbi/sbi_timer.h>
@@ -115,12 +116,14 @@ int sbi_hsm_hart_interruptible_mask(const struct sbi_domain *dom,
 {
 	int hstate;
 	ulong i, hmask, dmask;
+	const struct sbi_platform *plat = sbi_platform_thishart_ptr();
+	u32 hart_count = sbi_platform_hart_count(plat);
 
 	*out_hmask = 0;
 	if (!sbi_hartid_valid(hbase))
 		return SBI_EINVAL;
 
-	dmask = sbi_domain_get_assigned_hartmask(dom, hbase);
+	dmask = (1 << (hart_count - hbase)) - 1;
 	for (i = 0; i < BITS_PER_LONG; i++) {
 		hmask = 1UL << i;
 		if (!(dmask & hmask))
-- 
2.34.1

