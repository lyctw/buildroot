From 077c50133d27a03518ec8377cce86eb0f6860eec Mon Sep 17 00:00:00 2001
From: Alvin Chang <alvinga@andestech.com>
Date: Tue, 5 Mar 2024 15:22:19 +0800
Subject: [PATCH 02/17] core: riscv: Add DT nodes for /firmware/optee and
 optee_shm

1. Add device tree node to probe OP-TEE kernel driver

    firmware {
        optee {
            compatible = "linaro,optee-tz";
            method = "smc";
        };
    };

2. Add device node for OP-TEE shared memory as reserved memory.

Signed-off-by: Alvin Chang <alvinga@andestech.com>
---
 core/arch/riscv/kernel/boot.c | 58 +++++++++++++++++++++++++++++++++++
 1 file changed, 58 insertions(+)

diff --git a/core/arch/riscv/kernel/boot.c b/core/arch/riscv/kernel/boot.c
index f2b3c1cc4..b0020b724 100644
--- a/core/arch/riscv/kernel/boot.c
+++ b/core/arch/riscv/kernel/boot.c
@@ -15,6 +15,7 @@
 #include <kernel/misc.h>
 #include <kernel/panic.h>
 #include <kernel/thread.h>
+#include <libfdt.h>
 #include <mm/core_memprot.h>
 #include <mm/core_mmu.h>
 #include <mm/tee_mm.h>
@@ -34,6 +35,55 @@ unsigned long boot_args[4];
 uint32_t sem_cpu_sync[CFG_TEE_CORE_NB_CORE];
 
 #if defined(CFG_DT)
+static int add_optee_dt_node(struct dt_descriptor *dt)
+{
+	int offs;
+	int ret;
+
+	if (fdt_path_offset(dt->blob, "/firmware/optee") >= 0) {
+		DMSG("OP-TEE Device Tree node already exists!");
+		return 0;
+	}
+
+	offs = fdt_path_offset(dt->blob, "/firmware");
+	if (offs < 0) {
+		offs = add_dt_path_subnode(dt, "/", "firmware");
+		if (offs < 0)
+			return -1;
+	}
+
+	offs = fdt_add_subnode(dt->blob, offs, "optee");
+	if (offs < 0)
+		return -1;
+
+	ret = fdt_setprop_string(dt->blob, offs, "compatible",
+				 "linaro,optee-tz");
+	if (ret < 0)
+		return -1;
+	ret = fdt_setprop_string(dt->blob, offs, "method", "smc");
+	if (ret < 0)
+		return -1;
+
+	return 0;
+}
+
+#ifdef CFG_CORE_RESERVED_SHM
+static int mark_static_shm_as_reserved(struct dt_descriptor *dt)
+{
+	vaddr_t shm_start;
+	vaddr_t shm_end;
+
+	core_mmu_get_mem_by_type(MEM_AREA_NSEC_SHM, &shm_start, &shm_end);
+	if (shm_start != shm_end)
+		return add_res_mem_dt_node(dt, "optee_shm",
+					   virt_to_phys((void *)shm_start),
+					   shm_end - shm_start);
+
+	DMSG("No SHM configured");
+	return -1;
+}
+#endif /*CFG_CORE_RESERVED_SHM*/
+
 static int mark_tddram_as_reserved(struct dt_descriptor *dt)
 {
 	return add_res_mem_dt_node(dt, "optee_core", CFG_TDDRAM_START,
@@ -47,6 +97,14 @@ static void update_external_dt(void)
 	if (!dt || !dt->blob)
 		return;
 
+	if (add_optee_dt_node(dt))
+		panic("Failed to add OP-TEE Device Tree node");
+
+#ifdef CFG_CORE_RESERVED_SHM
+	if (mark_static_shm_as_reserved(dt))
+		panic("Failed to config non-secure memory");
+#endif
+
 	if (mark_tddram_as_reserved(dt))
 		panic("Failed to config secure memory");
 }
-- 
2.34.1

